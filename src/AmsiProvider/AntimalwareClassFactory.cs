using System;
using System.Runtime.InteropServices;
using System.Runtime.InteropServices.Marshalling;

namespace AmsiProvider;

[GeneratedComClass]
internal partial class AntimalwareClassFactory : IClassFactory
{
    public unsafe nint CreateInstance(nint pUnkOuter, Guid* riid)
    {
        string riidString = riid->ToString();
        Dll.Log($"IClassFactory.CreateInstance 0x{pUnkOuter.ToInt64():X8} - '{riidString}'");

        if (!string.Equals(riidString, typeof(IAntimalwareProvider).GUID.ToString(), StringComparison.OrdinalIgnoreCase))
        {
            throw new NotImplementedException();
        }

        Dll.Log("IClassFactory.CreateInstance creating IAntimalwareProvider");
        return (nint)ComInterfaceMarshaller<IAntimalwareProvider>.ConvertToUnmanaged(new AntimalwareProvider());
    }

    public void LockServer([MarshalAs(UnmanagedType.Bool)] bool fLock)
    {
        Dll.Log($"IClassFactory.LockServer {fLock}");
        return;
    }
}
