using AmsiProvider.Com;
using System;
using System.Runtime.InteropServices;
using System.Runtime.InteropServices.Marshalling;

namespace AmsiProvider;

[GeneratedComClass]
internal partial class AntimalwareClassFactory : IClassFactory
{
    private readonly ProviderConfig _config;

    public AntimalwareClassFactory(ProviderConfig config)
    {
        _config = config;
    }

    public unsafe nint CreateInstance(nint pUnkOuter, Guid* riid)
    {
        string riidString = riid->ToString();

        if (string.Equals(riidString, typeof(IAntimalwareProvider).GUID.ToString(), StringComparison.OrdinalIgnoreCase))
        {
            return (nint)ComInterfaceMarshaller<IAntimalwareProvider>.ConvertToUnmanaged(new AntimalwareProvider(_config));
        }
        else if (string.Equals(riidString, typeof(IAntimalwareProvider2).GUID.ToString(), StringComparison.OrdinalIgnoreCase))
        {
            return (nint)ComInterfaceMarshaller<IAntimalwareProvider2>.ConvertToUnmanaged(new AntimalwareProvider(_config));
        }

        throw new NotImplementedException($"Unknown COM riid requested '{riidString}'");
    }

    public void LockServer([MarshalAs(UnmanagedType.Bool)] bool fLock)
    { }
}
