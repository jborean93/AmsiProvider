using System;
using System.Runtime.InteropServices;
using System.Runtime.InteropServices.Marshalling;

namespace AmsiProvider;

[GeneratedComClass]
internal partial class AntimalwareProvider : IAntimalwareProvider
{
    public int Scan(
        [MarshalAs(UnmanagedType.Interface)] IAmsiStream? stream)
    {
        const int AMSI_ATTRIBUTE_APP_NAME = 0;

        Dll.Log("Scan");
        try
        {
            if (stream is null)
            {
                Dll.Log("Scan stream null");
                return 0;
            }

            int appNameSize = stream.GetAttribute(AMSI_ATTRIBUTE_APP_NAME, 0, IntPtr.Zero);
            Dll.Log($"Scan - AppName {appNameSize}");
        }
        catch (Exception e)
        {
            Dll.Log($"Scan failure\n{e}");
            throw;
        }

        return (int)AmsiResult.NotDetected;
    }

    public void CloseSession(
        long session)
    {
        Dll.Log($"CloseSession {session}");
    }

    public string DisplayName()
    {
        Dll.Log("DisplayName");
        return Dll.ProviderName;
    }
}

enum AmsiResult
{
    Clean = 0,
    NotDetected = 1,
    BlockedByAdminStart = 16384,
    BlockedByAdminEnd = 20479,
    Detected = 32768,
}
